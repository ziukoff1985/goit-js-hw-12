/* empty css                      */import{a as w,i,S as L}from"./assets/vendor-D73Uttp0.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const u of s.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&n(u)}).observe(document,{childList:!0,subtree:!0});function o(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(e){if(e.ep)return;e.ep=!0;const s=o(e);fetch(e.href,s)}})();const R="46843956-48321f6890b82a65cca7319ef",P="https://pixabay.com/api/";async function f(r,t=1){const o=new URLSearchParams({key:R,q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,page:t,per_page:15}),n=`${P}?${o}`;try{return(await w.get(n)).data}catch(e){throw iziToast.error({title:"Error",message:"Failed to fetch images. Please try again later.",position:"topRight"}),console.error("There was a problem with the fetch operation:",e),e}}const S=document.querySelector(".gallery");function h(r){const t=r.map(o=>`<li class="gallery-item">
	  <a class="gallery-link" href="${o.largeImageURL}">
		<img 
			class="gallery-image" 
			src="${o.webformatURL}" 
			alt="${o.tags}" loading="lazy" 
			/>
        <div class="gallery-info">
        <p class="gallery-likes"><span>Likes:</span> ${o.likes}</p>
        <p class="gallery-views"><span>Views:</span> ${o.views}</p>
        <p class="gallery-comments"><span>Comments:</span> ${o.comments}</p>
        <p class="gallery-downloads"><span>Downloads:</span> ${o.downloads}</p>
      </div>    
	  </a>
    </li>
    `).join("");S.insertAdjacentHTML("beforeend",t)}let d,c="",l=1,g=0;const p=document.querySelector(".gallery"),b=document.querySelector(".form"),v=document.querySelector(".input"),y=document.querySelector(".loader"),m=document.querySelector(".loader-extra"),a=document.querySelector(".load-more");a.style.display="none";b.addEventListener("submit",E);a.addEventListener("click",q);async function E(r){if(r.preventDefault(),p.innerHTML="",c=v.value.trim(),l=1,!c){i.error({title:"Error",message:"Please enter a search query...",position:"topRight"});return}y.style.display="block",a.style.display="none";try{const t=await f(c,l);if(g=t.totalHits,y.style.display="none",t.hits.length===0){p.innerHTML="",i.info({title:"No Results",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight",timeout:5e3}),b.reset();return}p.innerHTML="",h(t.hits),d=new L(".gallery a",{captions:!0,captionSelector:"img",captionType:"attr",captionsData:"alt",captionDelay:250});const o=Math.ceil(g/15);l>=o?(a.style.display="none",i.info({title:"End of Results",message:"We're sorry, but you've reached the end of search results.",position:"topRight",timeout:5e3})):a.style.display="block"}catch(t){y.style.display="none",i.error({title:"Error",message:"Failed to fetch images. Please try again later.",position:"topRight"}),console.error("Error fetching images:",t)}}async function q(){l+=1,m.style.display="block",a.style.display="none";try{const r=await f(c,l);if(m.style.display="none",r.hits.length===0){a.style.display="none",i.info({title:"No More Results",message:"No more images available.",position:"topRight",timeout:5e3});return}h(r.hits),M();const t=Math.ceil(g/15);l>=t?(a.style.display="none",i.info({title:"End of Results",message:"We're sorry, but you've reached the end of search results.",position:"topRight",timeout:5e3})):a.style.display="block",d&&d.refresh()}catch(r){y.style.display="none",a.style.display="block",i.error({title:"Error",message:"Failed to fetch more images. Please try again later.",position:"topRight"}),console.error("Error fetching more images:",r)}}function M(){const r=p.querySelector(".gallery-item");if(!r)return;const t=r.getBoundingClientRect().height;window.scrollBy({left:0,top:t*2,behavior:"smooth"})}
//# sourceMappingURL=index.js.map
